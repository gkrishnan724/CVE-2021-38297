package main

import (
	"fmt"
	"os"
	"syscall/js"
)

var data2 = "Hello world"

func gopal(this js.Value, p []js.Value) interface{} {
	if len(p) != 2 {
		return "Please provide two numbers"
	}

	num1 := p[0].Float()
	num2 := p[1].Float()

	result := num1 + num2
	return result
}

func checkData(this js.Value, p []js.Value) interface{} {
	fmt.Print(data2)
	return data2
}

func printArgsLocation() interface{} {
	fmt.Printf("Os args (%p), Global data2(ptr,val): (%p), \n", &os.Args, &data2)
	return os.Args
}

func registerCallbacks() {
	js.Global().Set("add", js.FuncOf(gopal))
	js.Global().Set("printGlobal", js.FuncOf(checkData))
}

func main() {
	c := make(chan struct{}, 0)

	fmt.Println("Go WebAssembly Initialized")
	registerCallbacks()
	printArgsLocation()

	<-c
}
